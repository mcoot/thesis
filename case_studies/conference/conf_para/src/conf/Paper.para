package conf;

/**
 * A paper which may be submitted to a conference
 */
public class Paper<policy authorRestriction> {

    private final ?policyof(this) String title;
    private final ?policyof(this) String paperAbstract;

    private final ?authorRestriction Author[]<authorRestriction> authors;

    public !authorRestriction Paper(?policyof(this) String title, ?policyof(this) String paperAbstract, ?authorRestriction Author[]<authorRestriction> authors) {
        this.title = title;
        this.paperAbstract = paperAbstract;

        this.authors = new Author[authors.length];
        for (int i = 0; i < authors.length; ++i) {
            this.authors[i] = authors[i];
        }
    }

    public ?policyof(this) String getTitle() {
        return title;
    }

    public ?policyof(this) String getAbstract() {
        return paperAbstract;
    }

    public ?authorRestriction !authorRestriction Author[]<authorRestriction> getAuthors() {
        ?authorRestriction Author[]<authorRestriction> copy = new Author[authors.length];
        for (int i = 0; i < authors.length; ++i) {
            copy[i] = authors[i];
        }
        return copy;
    }

    public ?(policyof(this)*authorRestriction*policyof(o)) boolean equals(Object o) {
        try {
            Paper<authorRestriction> other;
            try {
                other = (Paper)o;
            } catch (ClassCastException ex) {
                return false;
            }

            if (authors.length != other.authors.length) return false;

            for (int i = 0; i < authors.length; ++i) {
                if (!authors[i].equals(other.authors[i])) {
                    return false;
                }
            }

            return other.title.equals(title) && other.paperAbstract.equals(paperAbstract);
        } catch (NullPointerException ex) {
            return false;
        }
    }

    public ?(policyof(this)*authorRestriction) int hashCode() {
        ?(policyof(this)*authorRestriction) int result = 19;

        result = 31 * result + title.hashCode();
        result = 31 * result + paperAbstract.hashCode();
        // Assuming order of authors matters
        for (int i = 0; i < authors.length; ++i) {
            result = 31 * result + authors[i].hashCode();
        }

        return result;
    }

    public ?(policyof(this)*authorRestriction) String toString() {
        ?(policyof(this)*authorRestriction) String s = "";

        s += "Title: " + title + "\n";

        s += "Abstract: " + paperAbstract + "\n";

        s += "Authors: ";

        String sep = "";
        for (int i = 0; i < authors.length; ++i) {
            s += sep + authors[i].toString();
            sep = ",";
        }

        return s;
    }

}
