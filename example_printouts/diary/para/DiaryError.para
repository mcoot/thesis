public class DiaryError {
	public static final User alice = new User("Alice");
	public static final User betty = new User("Betty");
	public static final User mal = new User("Mal");
	
	private lock declassifier;
	
	public static final policy aliceAndBetty = {
		alice: ; 
		betty: ; 
		mal: declassifier 
	};
	
	public static final policy everyone = {
		alice: ;
		betty: ;
		mal: 
	};
	
	private ?aliceAndBetty int secretNumber;
	
	public DiaryError() {
		secretNumber = 5;
	}
	
	public ?everyone int readDiary() {
		return secretNumber;
	}
	
	public ?aliceAndBetty boolean isTheSecret5() {
		boolean result;
		if (secretNumber == 5) {
			return true;
		} else {
			return false;
		}
	}
	
	public !aliceAndBetty void modifyDiary() {
		secretNumber = 10;
	}
	
	public ?everyone int declassifyDiary() {
		int result;
		open declassifier {
			result = secretNumber;
		};
		return result;
	}
}

/* 
In DiaryError.para at unknown line:
In the context of class DiaryError:
In the context of method readDiary:
In the context of lock state []:
Returned value has too restrictive policy:
Return expression: secretNumber
  with policy: { alice#1 :; betty#2 :; mal#3 : declassifier}
Declared policy bound: { alice#1 :; betty#2 :; mal#3 :}
 */