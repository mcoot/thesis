package javax.crypto;

import java.security.Key;
import java.security.NoSuchAlgorithmException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.spec.AlgorithmParameterSpec;
import java.security.Provider;
import javax.crypto.spec.*;

public class Cipher {

    private static int __JIF_SIG_OF_JAVA_CLASS$20030619 = 0;

    public static final int{}
        ENCRYPT_MODE = 1,
        DECRYPT_MODE = 2,
        PRIVATE_KEY  = 3,
        PUBLIC_KEY   = 4,
        SECRET_KEY   = 5,
        UNWRAP_MODE  = 6,
        WRAP_MODE    = 7;
    
    public static native Cipher{transformation} getInstance(String transformation) 
	throws NoSuchAlgorithmException, NoSuchPaddingException;

    public static native Cipher{transformation;provider} getInstance(String transformation, Provider provider) 
	throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalArgumentException;

    public native byte{this;input}[]{this;input} doFinal(byte{input}[] input) 
	throws IllegalBlockSizeException, BadPaddingException;

    public native final byte{this}[]{this} getIV();

    public native final void init(int{} opmode, Key key, AlgorithmParameterSpec params) 
	throws (InvalidKeyException, InvalidAlgorithmParameterException);

    public native final void init(int{} opmode, Key key) 
	throws (InvalidKeyException);
}
