package policy;

import java.security.PublicKey;

public class BonoPrincipal extends KeyPrincipal {
Principal{} dmbcP;

public BonoPrincipal(String{this} name) {
    super(name);
}

public BonoPrincipal(String{this} name, PublicKey{} pubKey)
{
 	super(name,pubKey);
}

public BonoPrincipal{}(String{this} name, PublicKey{} pubKey, char{user:}[]{user:} pwd, principal{} user) where caller(user)
{
 	super(name,pubKey,pwd,user);
}

public void setDeclPs{p1}(Principal{} p1)
{
	dmbcP = p1;
}

public boolean{authPrf; closure; lb; this} isAuthorized(Object authPrf, Closure[this,lb] closure, label lb)
where authority(this) {
	final principal dmbcp = dmbcP;
	boolean dmbcComp = false;
	if (new label{dmbcp:} <= lb) dmbcComp = true;
    return ((closure instanceof policy.AddDelClosureL[this,lb])
 || (closure instanceof crypto.AESClosure[this,lb])
 || (closure instanceof smtp.DeclassStringClosure[this,lb])
 || (dmbcComp && closure instanceof smtp.DeclassMsgBodyClosure[this,lb])
 || (closure instanceof smtp.EmailHdrDeclassClosure[this,lb])
 || (closure instanceof crypto.RSAClosure[this,lb])
);
}
}

